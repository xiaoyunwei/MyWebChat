<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tmrCheckMessage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="notifyIcon.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>178, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAAAIABoBAAAJgAAACAgAAAAACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAI
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAwIAAAeCwAAFwAA
        AAYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAABwhEgZVflA+uIBP
        PLU6HgxUAAAAGQAAAAcAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAEQAAADZlPy6arHhv8b+G
        hv+yb2//pmVg9H5PQLJCJQ5ZAAAAGAAAAAUAAAAAAAAAAAAAAAAAAAABDAAAFk4tFnKidWncxJCQ/r+H
        h//BiYn/tnZ2/61lZf+xbW3/rnZ07o5eUbNjNRVIAAAAAgAAAAAAAAAAAAAAAXpFK1jJnZ31woyM/7+G
        hv+/hob/w46O/7l8fP+tZWX/rWVl/61lZf++hIT/ckAeTAAAAAEAAAAAAAAAAAAAAACMVTdUzaGh/7+G
        hv+/hob/v4aG/8WSkv+9goL/rWVl/61lZf+tZWX/wYuL/4NNI0IAAAAAAAAAAAAAAAAAAAAAj1g6VNKq
        qv+/hob/v4aG/7+Ghv/Il5f/wIiI/q1lZf+tZWX/rWVl/8eWlv+JTiNBAAAAAAAAAAAAAAAAAAAAAI9Y
        OlTUr6//v4aG/7+Ghv/MoKD/9Obm/urS0v+/hob/rWVl/61lZf/KnJz/iVInQQAAAAAAAAAAAAAAAAAA
        AACPWDpU1K+v/8GLi//ev7///eTk///Y2P//19f//uDg/+fBwf+8gID/yZqa/4lOJ0EAAAAAAAAAAAAA
        AAAAAAAAj1g3VNq3t//tyMj//9fX///X1///19f//9fX///X1///19f//dnZ/+fHxveITCI8AAAAAAAA
        AAAAAAAAAAAAAIJHHivDnY2m8NLQ8f/b2///19f//9fX///X1///19f//+Dg/dq5rcGQVi0+fwAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIdNJjXFm46n7svI9P/Y2P//29v/4b206a5/ZFx/QAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf0AABIhSKT7BloSqvI51kHdEEQ8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfzcSDn8AAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA/n8AAPgfAADwBwAA4AcAAOAHAADgBwAA4AcAAOAH
        AADgBwAA4A8AAPg/AAD+fwAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAgAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAIAAAADAAAAAgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAMAAAAHAAAADAAAAA8AAAAMAAAABwAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAFAAAADQAAABoAAAApEw4FNxUQADEAAAAbAAAADwAAAAcAAAADAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAADAAAACQAAABUAAAAnAAAAPxYOA15qOhq9TioRiksqEnQXDgU4AAAAHAAA
        AA8AAAAHAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAACAAAABgAAAA8AAAAfAAAANREMBlhGJQ+WeEYp1rqFhfKyc3P3hVAy4CIR
        BWpjNxeTBQAAMQAAAB0AAAAQAAAACAAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAsAAAAYAAAALBcKB04WCgVpfEUg6K5/f+K/h4b/v4aG/7Z0
        dP+tZWX/rmxr+YZQN9kfEQVrZDkXmQAAAC8AAAAdAAAAEAAAAAgAAAADAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAcAAAASAAAAIwAAAD0JBgNZdkAc3JlsZNXCjo3+woyM/8CH
        h//Ah4f/u35+/61mZv+wamr/sm9v/7Fzb/qGVkbNTSsSj1w0FIoAAAAvAAAAHAAAAA4AAAAFAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAHAAAAFgAAAC0NCgBPXzUWsIJXQdHEk5L7x5WV/8KL
        i/+/hob/v4aG/8KLi/+/hIT/rWVl/61lZf+tZmb/sm9v/7l7e/+1fHn7i11Vwmk5GrNTLRJyDgcAJQAA
        AA0AAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAA4XBgYtQiIQcH9JKNzAk5HyzJ+f/8aS
        kv+/hob/v4aG/7+Ghv+/hob/xI+P/8KLi/+tZWX/rWVl/61lZf+tZWX/rWZm/7Vzc/++hYX/vIeE+ptu
        bK2BRx/fAAAAEgAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADGwAAE4NIH+W8kI/XzqWk/8ud
        nf/BiYn/v4aG/7+Ghv+/hob/v4aG/7+Ghv/GlJT/xZGR/61lZf+tZWX/rWVl/61lZf+tZWX/rWVl/61m
        Zv+3d3f/x5WV/1E0GkUAAAANAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAIglZTYtax
        sf/Ej4//v4aG/7+Ghv+/hob/v4aG/7+Ghv+/hob/v4aG/8mZmf/Ilpb/rWVl/61lZf+tZWX/rWVl/61l
        Zf+tZWX/rWVl/61lZf/NoaH/hksi2gAAAAQAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFU5
        AAmJTyf12rm5/7+Ghv+/hob/v4aG/7+Ghv+/hob/v4aG/7+Ghv+/hob/y52d/8ydnf+tZWX/rWVl/61l
        Zf+tZWX/rWVl/61lZf+tZWX/rWVl/9Strf+FUywuAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJxpZlXfwsL/v4aG/7+Ghv+/hob/v4aG/7+Ghv+/hob/v4aG/7+Ghv/NoaH/z6Oj/61l
        Zf+tZWX/rWVl/61lZf+tZWX/rWVl/61lZf+tZWX/2bi4/4dNI9kAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABtJAAHi1Eq9OPLy/+/hob/v4aG/7+Ghv+/hob/v4aG/7+Ghv+/hob/v4aG/9Cm
        pv/Sqan/rWVl/61lZf+tZWX/rWVl/61lZf+tZWX/rWVl/61lZf/fxMT/kWI0LAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdbmtW59LS/7+Ghv+/hob/v4aG/7+Ghv+/hob/v4aG/7+G
        hv+/hob/06ur/9Strf2tZWX/rWVl/61lZf+tZWX/rWVl/61lZf+tZWX/rWVl/+TMzP+ITSPZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbSQAB4xTK/Tq19f/v4aG/7+Ghv+/hob/v4aG/7+G
        hv+/hob/v4aG/9eysv/59fX+9OXl/7l7e/+tZWX/rWVl/61lZf+tZWX/rWVl/61lZf+tZWX/6NPT/5Ng
        OS0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnm9sV+va2v+/hob/v4aG/7+G
        hv+/hob/v4aG/8iXl//r3d3///7+///y8v//7+///vr6/+3W1v+4eXn/rWVl/61lZf+tZWX/rWVl/61l
        Zf/p1tb/iE8l2QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAG0kAAeMUyv069ra/7+G
        hv+/hob/v4aG/8CIiP/ZvLz/+vX1///s7P//3Nz//9fX///X1///2Nj//+Tk//3u7v/r0tL/uHh4/61l
        Zf+tZWX/rWVl/+jU1P+TYDktAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ5v
        bFfp1tb/v4aG/7+Ghv/KnZ3/59bW//vj4///2Nj//9fX///X1///19f//9fX///X1///19f//9fX///a
        2v/84eH/4r+//7d3d/+tZWX/5M3N/4hNI9kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABtJAAHjFIq9ObPz//Cior/x6Cg//HT0///19f//9fX///X1///19f//9fX///X1///19f//9fX///X
        1///19f//9fX///X1///19f/+tTU/9qrq//ix8f/kFkyLgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACcbGlV3cbG/+O/v///19f//9fX///X1///19f//9fX///X1///19f//9fX///X
        1///19f//9fX///X1///19f//9fX///Y2P//4uL//urq/+LDu9+GSiLFAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVQAAA4VMIazNqafC8NjV/v/n5///3Nz//9fX///X1///19f//9fX///X
        1///19f//9fX///X1///19f//9fX///X1///3t7//ujo//rh4O+SWTTjdEYAC3E5AAkAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAINFIUaKTiiUyaOby/Pa2P7/5OT//9ra///X
        1///19f//9fX///X1///19f//9fX///X1///2tr//+Tk//3l5Pqod1vThUYeRXY7FA0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACESB90i1c0YcKb
        kdH02dn+/+Dg///Z2f//19f//9fX///X1///2Nj//+Dg//7j4/7PqZnOh00kj3g8DxEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAhkkhnKJsWDS7k4XX9tjY/v/d3f//2Nj//9zc///h4f/w0M3bi1ErzX9AKgx/TBkKAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAfzkOEoZLHZOeb103uo+C1ffX1/z+3t7tlV040XxGFyF7TBMbAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIJGIS+GSB5njFQvc4NLHGN8RhchAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACERCA4cTkACQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////////////////////n////gv///wC///wAD//wAAf/4A
        AB/4AAA//AAAH/gAAD/8AAAf+AAAP/wAAB/4AAA//AAAH/gAAD/8AAAf+AAAP/wAAB/4AAB//gAB///A
        A///0A////Q/////////////////////////////
</value>
  </data>
</root>